# ---------Socketio message queue params: ---------
MESSAGE_QUEUE: &MQ "redis://"  # redis at localhost
MESSAGE_QUEUE_CHANNEL: "linker_app_socketio"

# --------- Server configs: ---------
PORT: 5000
HOST: '0.0.0.0'
CORS_ALLOWED_ORIGINS: &CORS_ALLOWED "*"
LOG_PATH: &LOG_PATH logs/app.log
FILES_STORE_DIR: "files" # Relative path in app directory
FILE_EXTENSION: "csv"
SECRET_KEY: "hack-my-secret-key"
LINKS_MAX_PER_PAGE: 200

#FILE_MAX_SIZE: 1024 # kb -> 1mb
#URL_MAX_SIZE : 255 # bytes

# --------- Sqlalchemy settings ---------
SQLALCHEMY_DATABASE_URI: &DB_URL "postgresql://test:test@localhost/test_db"
SQLALCHEMY_POOL_SIZE: 5  # long living connections
SQLALCHEMY_MAX_OVERFLOW: 10  # limit for pool overflow. Set -1 to no limit
SQLALCHEMY_TIMEOUT: 30 # sec
WTF_CSRF_SECRET_KEY: 'a random string'

# debug params:
SQLALCHEMY_ECHO: false

# if no db table specified for run test, then important to
# add a slash at the end of url to postgres. Example: postgresql://test:test@localhost/"
CI_LINKER_APP_PG_URI: "postgresql://test:test@localhost/test_db"

# --------- RabbitMQ module params: ---------
RMQ_HOST: 'localhost'
RMQ_PORT: '5672'
RMQ_QUEUE: 'linker_app_file_parser'
RMQ_DURABLE: true
#RMQ_MODE: 'PERSISTENT_DELIVERY_MODE' 'linker_app_file_parser'

#----------  External modules and logging settings: ----------
SOCKETIO:
  logger: true
  engineio_logger: true

LOGGING:
  LEVEL: INFO
  FILE:
    LEVEL: &FILE_LEVEL INFO
    HANDLER:
      maxBytes: 1024 # 1MB = 1024 Bytes

      backupCount: 10 # max backup files number
      filename: *LOG_PATH
    FORMATTER:
      fmt: "%(asctime)s - %(levelname)s - %(message)s"

  BUFFER:
    LOG_BUFFER_SIZE: 50  # count of last log messages stored in buffer
    LEVEL: *FILE_LEVEL
    FORMATTER:
      fmt: "%(asctime)s - %(levelname)s - %(message)s"

  WS:
    LEVEL: NOTSET
    SHOWED_COUNT: 50  # count of last log messages seen when page is opened
    EVENT_NAME: new_log  # event name for adding a new log line at frontend
    NAMESPACE: "/logs" # namespace name for socketio handler
    FORMATTER:
      fmt: "%(asctime)s - %(levelname)s - %(message)s"

