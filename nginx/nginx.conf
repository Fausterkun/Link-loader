user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections 1024;
}


# upstream socketio_nodes {
#     ip_hash;
#
#     server app:5000;
# #     server 127.0.0.1:8000;
# #     server 127.0.0.1:8001;
# #     server 127.0.0.1:8002;
#     # to scale the app, just add more nodes here!
# }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    #gzip  on;

    upstream app {
        server app:5000;
    }

    server {
        listen 80;
        server_name localhost; # input your server name

        # static from frontend
        location /static/ {
            root /usr/share/nginx/html/;
        }

        location /meida/ {
            root /usr/share/nginx/html/;
        }


        location /socket.io {
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://app/socket.io;
        }

        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
        # will search error pages in static dir
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
