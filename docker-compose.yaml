version: '3.8'
services:
  db:
    image: postgres:latest
    env_file:
      - ./compose.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - app_network
    restart: always

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app_network
    restart: always

  app:
    build: .
    container_name: linker_app
    env_file:
      - ./compose.env
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - redis
      - db
    networks:
      - app_network
    restart: always

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - app
    networks:
      - app_network
    restart: always

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672" # RabbitMQ port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      service_net:
      app_network:

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus_docker/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      service_net:

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      service_net:

volumes:
  db_data:
    driver: local
  static_value:
  media_value:
  rabbitmq_data:
    driver: local
  grafana_data:
    driver: local


networks:
  app_network:
    driver: bridge
  service_net:
    driver: bridge
